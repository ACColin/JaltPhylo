anova(model1, model2)
AIC(model1, model2)
BIC(model1, model2)
model3 <- update(model2, ~. -Gender)
summary(model3)
plot_numbers <- 1:6
layout(matrix(plot_numbers, ncol=2, byrow=TRUE))
plot(model4, plot_numbers)
plot(model3, plot_numbers)
new_data <- data.frame(
Age.Group = "30 to 34",
Ethnicity = "Non-Hispanic Whites"
)
predict(model3, new_data)
new_data
model3
rm(ls=())
rm(
)
rm(ls={})
rm(list = ={})
rm(list ={})
rm(list =())
rm(list=ls())
library(Mfuzz)
install.packages(Mfuzz)
install.packages("Mfuzz")
source("https://bioconductor.org/biocLite.R")
biocLite("Mfuzz")
library(Mfuzz)
library(Mfuzz)
biocLite("Mfuzz")
library(Mfuzz)
source("https://bioconductor.org/biocLite.R")
biocLite("Mfuzz")
library(Mfuzz)
capabilities("tcltk")
system("ls -ld /usr/local /usr/local/lib /usr/local/lib/libtcl*")
library(Mfuzz)
library(reshape)
install.packages("reshape")
library(reshape)
?contour()
example("contour")
y = x
x
rm(list=ls())
x=seq(1,10)
y = x
?outer
f=outer(x,y,function(x,y)cos(y)/(1+x^2))
contour(x,y,f)
image(x,y,f)
persp(x,y,f)
Auto=read.table("Auto.data")
library(ISLR)
library("ISLR")
install.packages("ISLR")
library("ISLR")
library(ISLR)
Auto=read.table("Auto.data")
Auto=read.table("Auto.data")
autodata <- read.table('auto-mpg.data')
Auto=read.table("Auto.data")
Auto=read.table("Auto")
Auto=read.table(Auto)
head(Auto)
fix(Auto)
cylinders
?t.test
?qqnorm
example(qqnorm)
?qqnorm
?shapiro.test()
example("shapiro.test")
library(ISLR)
names(Smarket)
dim(Smarket)
fix(Smarket)
summary(Smarket)
cor(Smarket[.-9])
cor(Smarket[,-9])
cor(Smarket[,-9])
attach(Smarket)
plot(Volume)
glm.fit = glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, data=Smarket, family=binomial)
summary(glm.fit)
dim(Smarket)
fix(Smarket)
lda.fit=lda(Direction~Lag1+Lag2,data=Smarket,subset=train)
library(MASS)
?lda
train=(Year<2005)
train
Smarket.2005=Smarket[!train]
Smarket.2005=Smarket[!train,]
dim(Smarket.2005)
Direction.2005=Direction[!train]
lda.fit=lda(Direction~Lag1+Lag2,data=Smarket,subset=train)
lda.fit
plot(lad.fit)
plot(lda.fit)
library(ISLR)
fix(Hitters)
names(Hitters)
dim(Hitters)
sum(is.na(Hitters$Salary))
Hitters=na.omit(Hitters)
dim(Hitters)
sum(is.na(Hitters$Salary))
library(leaps)
install.packages("leaps")
library(leaps)
reg.full = regsubsets(Salary~., Hitters)
summary(reg.full)
reg.summary = summary(reg.full)
names(reg.summary)
reg.summary$rsq
par(mfrow=c(2,2))
plot(reg.summary$rss,type="l")
plot(reg.summary$adjr2,type="l")
plot(reg.summary$cp,type="l")
which.min(reg.summary$cp)
x = model.matrix(Salary~., Hitters)[,-1]
library(ISLR)
x = model.matrix(Salary~., Hitters)[,-1]
y=Hitters$Salary
x
head(x)
y
head(x)
head(y)
library(glmnet)
install.packages("glmnet")
library(glmnet)
grid = 10^seq(10,-2,length=100)
grid
rigde.mod = glmnet(x,y,alpha=0,lambda=grid)
nrow(x)
nrow(y)
y
nrow(y)
nrow(x)
Hitters = na.omit(Hitters)
x = model.matrix(Salary~., Hitters)[,-1]
y=Hitters$Salary
rigde.mod = glmnet(x,y,alpha=0,lambda=grid)
dim(coef(ridge.mod))
dim(coef(rigde.mod))
rigde.mod$lambda
rigde.mod$lambda[50]
coef(rigde.mod)[,50]
set.seed((1))
set.seed(1)
train=sample(1:nrow(x), nrow(x)/2)
test=(-train)
y.test=y[test]
cv.out=cv.glmnet(x[train,], y[train], alpha=0)
plot(cv.out)
bestlam=cv.out$lambda.min
bestlam
cv.out=cv.glmnet(x[train,], y[train], alpha=0)
plot(cv.out)
bestlam=cv.out$lambda.min
bestlam
library(ape)
tree <- rtree(n = 20)
tree
plot(tree, edge.with=20)
plot(tree, edge.with=2)
plot(tree, edge.with=2)
plot(tree, edge.width=2)
str(tree)
tree <- read.tree(text = "((((JA0723:0.00258278937843282094,((JA0432:0.00235137956409252205,JA0702:0.00158536687070359988):0.00040559760864193633,(JA0719:0.00152571898111078714,JA0816:0.00158723907546514460):0.00068065446759439684):0.00021511073216566701):0.00034935767299274038,(JA0711:0.00173877776321416672,JA0798:0.00164482123535953728):0.00122213390566645332):0.00299899123344145270,(JA0694:0.00411834925453280921,(JA0701:0.00044555329231616006,JA0014:0.00047667348936095838):0.00362943801502440405):0.00362032129518751866):0.02682483306133271253,Solyc:0.02682483306133271253);")
tree
plot(tree)
tree <- read.tree(text = "((((JA0014:0.00041555285025482506,JA0701:0.00040569301803802034)100:0.00333135309275681092,JA0694:0.00371905800004952280)100:0.00296178269249411765,((JA0798:0.00149236269731482297,JA0711:0.00154185927020389184)100:0.00107743812977416863,(JA0723:0.00225013033742460077,((JA0702:0.00136635069739470525,JA0432:0.00209726960619332613)100:0.00035747126520182154,(JA0816:0.00138036078348296835,JA0719:0.00133813160243117482)100:0.00057892068907953976)100:0.00017424424466224952)100:0.00028039224510104907)68:0.00241898535407217849):0.02462551234684755286,Solyc:0.02462551234684755286);
")
plot(tree)
plot(tree)
plotTree(tree)
plotTree
install.packages("ctv")
library(ctv)
install.views('Phylogenetics')
plotTree
library(pls)
install.packages("pls")
library(pls)
set.seed(2)
pcr.fit = pcr(Salary~., data=Hitters, scale= True)
library(ISLR)
pcr.fit = pcr(Salary~., data=Hitters, scale= True)
pcr.fit = pcr(Salary~., data=Hitters, scale= TRUE, validation="CV")
summary(pcr.fit)
validationplot(pcr.fit, val.type = "MSEP")
set.seed(1)
pcr.fit = pcr(Salary~., data=Hitters, subset=train, scale= TRUE, validation="CV")
train=sample(1:nrow(x), nrow(x)/2)
train=sample(1:nrow(x), nrow(x)/2)
set.seed(1)
train=sample(1:nrow(x), nrow(x)/2)
libraru(ISLR)
library(ISLR)
attach(Wage)
fit = lm(wage~poly(age, 4), data=Wage)
coef(summary(fit))
agelims =  range(age)
age.grid = seq(from=agelims[1], to=agelims[2])
age,grid
age.grid
age
age.grid
preds = predict(fit, newdata = list(age=age.grid), se=TRUE)
se.bands = cbind(preds$fit+2*preds$se.fit, preds$fit-2*preds$se.fit)
par(mfrow=c(1,2), mar=c(4.5,4.5,1,1), oma=c(0,0,4,0))
plot(age, wage, xlim=agelims, cex=.5, col="darkgrey")
title("Degree-4 Polynomial", outer=T)
lines(age.grid, preds$fit, lwd=2, col="blue")
matlines(age.grid, se.bands, lwd=1, col = "blue", lty=3)
?matlines
se.bands
fit = glm(I(wage>250)~poly(age,4), data=Wage, family=binomial)
preds = predict(fit, newdata=list(age=age.grid),se=T)
pfit = exp(preds$fit)/(1+exp(preds$fit))
se.bands = cbind(preds$fit+2*preds$se.fit, preds$fit-2*preds$se.fit)
se.bands.logit = cbind(preds$fit+2*preds$se.fit, preds$fit-2*preds$se.fit)
se.bands = exp(se.bands.logit)/(1+exp(se.bands.logit))
preds = predict(fit, newdata = list(age=age.grid), type="response", se=T)
plot(age, I(wage>250), xlim=agelims, type="n", ylim=c(0,.2))
points(jitter(age), I((wage>250)/5), cex=.5, pch="|", col="darkgrey")
?pch
lines(age.grid, pfit, lwd=2, col="blue")
matlines(age.grid, se.bands, lwd=1, col="blue", lty=3)
fit=lm(wage~cut(age,4), data=Wage)
coef(summary(fit))
library(splines)
fit=lm(wage~bs(age, knots=c(25,40,60)), data=Wage)
pred=predict(fit,newdata=list(age=age.grid), se=T)
plot(age, wage, col="gray")
lines(age.grid, pred$fit, lwd=2)
lines(age.grid, pred$fit+2*pred$se.fit, lwd=2)
plot(age, wage, col="gray")
plot(age, wage, col="gray")
lines(age.grid, pred$fit, lwd=2)
lines(age.grid, pred$fit+2*pred$se.fit, lty="dashed")
lines(age.grid, pred$fit-2*pred$se.fit, lty="dashed")
plot(age, wage, xlim=agelims, cex=.5, col="darkgret")
plot(age, wage, xlim=agelims, cex=.5, col="darkgrey")
fit=smooth.spline(age,wage,df=16)
fit2=smooth.spline(age,wage,cv=TRUE)
fit2$df
lines(fit, col="red", lwd=2)
lines(fit2, col="blue", lwd=2)
legend("topright", legend=c("16 DF", "6.8 DF"), col=c("red", "blue", lty=1, lwd=2, cex=.8))
legend("topright", legend=c("16 DF", "6.8 DF"), col=c("red", "blue"), lty=1, lwd=2, cex=.8)
?cex
plot(age, wage, xlim=agelims, cex=.5, col="darkgret")
plot(age, wage, xlim=agelims, cex=.5, col="darkgrey")
fit = loess(wage~agem span=.2, data=Wage)
fit = loess(wage~agem, span=.2, data=Wage)
fit = loess(wage~age, span=.2, data=Wage)
fit2 = loess(wage~age, span=.5, data=Wage)
lines(age.grid, predict(fit, data.frame(age=age.grid)), col="red", lwd=2)
lines(age.grid, predict(fit2, data.frame(age=age.grid)), col="blue", lwd=2)
install.packages("tree")
library(tree)
library(ISLR)
attach(Carseats)
High=ifelse(Sales<=8, "No", "Yes")
Carseats=data.frame(Carseats,High)
head(Carseats)
tree.carseats=tree(High~.-Sales, Carseats)
summary(tree.carseats)
plot(tree.carseats)
par(mfrow=c(1,1))
plot(tree.carseats)
text(tree.carseats, pretty=0)
set.seed(3)
cv.carseats=cv.tree(tree.carseats, FUN=prune.misclass)
names(cv.carseats)
par(mfrow=c(1,2))
plot(cv.carseats$size, cv.carseats$dev, type="b")
plot(cv.carseats$k, cv.carseats$dev, type="b")
set.seed(2)
train=sample(1:nrow(Carseats), 200)
Carseats.test=Carseats[-train,]
High.test=High[-train]
tree.carseats=tree(High~.-Sales, Carseats, subset = train)
tree.pred=predict(tree.carseats, Carseats.test, type="class")
table(tree.pred, High.test)
tree.pred
table(tree.pred, High.test)
set.seed(3)
cv.carseats=cv.tree(tree.carseats, FUN=prune.misclass)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
plot(cv.carseats$size, cv.carseats$dev, type="b")
plot(cv.carseats$k, cv.carseats$dev, type="b")
prune.carseats=prune.misclass(tree.carseats, best=9)
plot(prune.carseats)
text(prune.carseats, pretty=0)
library(MASS)
set.seed(1)
train=sample(1:nrow(Boston), nrow(Boston)/2)
tree.boston=tree(medv~.,Boston,subset=train)
summary(tree.boston)
plot(tree.boston)
plot(tree.boston)
text(tree.boston,pretty=0)
cv.boston=cv.tree(tree.boston)
plot(cv.boston$sizem cv.boston$dev, type="b")
plot(cv.boston$sizem cv.boston$dev, type='b')
plot(cv.boston$size, cv.boston$dev, type='b')
prune.boston=prune.tree(tree.boston, best=5)
plot(prune.boston)
textt(prune.boston,pretty=0)
text(prune.boston,pretty=0)
library(randomForest)
install.packages("randomFirest")
install.packages("randomForest")
library(randomForest)
set.seed(1)
bag.boston=randomForest(medv~.,data=Boston, subset = train)
bag.boston=randomForest(medv~.,data=Boston, subset = train, mtry=13, importance=True)
bag.boston=randomForest(medv~.,data=Boston, subset = train, mtry=13, importance=TRUE)
bag.boston
yhat.bag=predict(bag.boston,newdata=Boston[-train,])
plot(yhat.bag, boston.test)
boston.test=Boston[-train,"medv"]
plot(yhat.bag, boston.test)
par(mfrow=c(1,1))
plot(yhat.bag, boston.test)
abline(0,1)
?abline
abline(0,1)
set.seed(1)
rf.boston=randomForest(medv~.,data=Boston, subset = train, mtry=6, importance=True)
rf.boston=randomForest(medv~.,data=Boston, subset = train, mtry=6, importance=TRUE)
yhat.rf=predict(rf.boston,newdata=Boston[-train,])
mean((yhat.rf-boston.test)^@)
mean((yhat.rf-boston.test)^2)
yhat.rf
importance(rf.boston)
varImpPlot(rf.boston)
install.packages("gbm")
library(gbm)
set.seed(1)
boost.boston=gbm(medv~.,data=Boston[-train,],distribution="gaussian", n.trees=5000,interaction.depth = 4)
summary(boost.boston)
par(mfrow=c(1,2))
plot(boost.boston,i="rm")
plot(boost.boston,i="lstat")
yhat.boost=predict(boost.boston,newdata=Boston[-train,],n.trees=5000)
tr<-"((JA0701:0.00889885288723511921,(((((((((JA0798:0.00200368444798717073,JA0010:0.00333906359972692326):0.00000100000050002909[61],((JA0702:0.00066356215642486105,JA0432:0.00200700003974723555):0.00066560755153659875[73],JA0711:0.00133077213351093997):0.00000100000050002909[16]):0.00000100000050002909[64],JA0726:0.00471556421016543648):0.00333450771659845116[89],JA0450:0.00405555281567710185):0.00201172178804631284[90],JA0816:0.00068524409141148038):0.00068211801279086245[69],JA0723:0.00537957489908730876):0.00066559002340394651[51],(JA0719:0.00200372130986627064,JA0608:0.00066780790607693307):0.00069643094285804365[64]):0.00334390484050349880[82],JA0456:0.00337770967372290733):0.00093238195372218730[53],JA0694:0.00374835568737626494):0.00000100000050002909[13]):0.09590426373656199543,Solyc:0.09590426373656199543);
"
tr<-"((JA0701:0.00889885288723511921,(((((((((JA0798:0.00200368444798717073,JA0010:0.00333906359972692326):0.00000100000050002909[61],((JA0702:0.00066356215642486105,JA0432:0.00200700003974723555):0.00066560755153659875[73],JA0711:0.00133077213351093997):0.00000100000050002909[16]):0.00000100000050002909[64],JA0726:0.00471556421016543648):0.00333450771659845116[89],JA0450:0.00405555281567710185):0.00201172178804631284[90],JA0816:0.00068524409141148038):0.00068211801279086245[69],JA0723:0.00537957489908730876):0.00066559002340394651[51],(JA0719:0.00200372130986627064,JA0608:0.00066780790607693307):0.00069643094285804365[64]):0.00334390484050349880[82],JA0456:0.00337770967372290733):0.00093238195372218730[53],JA0694:0.00374835568737626494):0.00000100000050002909[13]):0.09590426373656199543,Solyc:0.09590426373656199543);"
tr$edge.length<-NULL
library(phylo)
install.packages("phylo")
library(ape)
tr$edge.length<-NULL
tr
tr<-"((JA0701:0.00889885288723511921,(((((((((JA0798:0.00200368444798717073,JA0010:0.00333906359972692326):0.00000100000050002909[61],((JA0702:0.00066356215642486105,JA0432:0.00200700003974723555):0.00066560755153659875[73],JA0711:0.00133077213351093997):0.00000100000050002909[16]):0.00000100000050002909[64],JA0726:0.00471556421016543648):0.00333450771659845116[89],JA0450:0.00405555281567710185):0.00201172178804631284[90],JA0816:0.00068524409141148038):0.00068211801279086245[69],JA0723:0.00537957489908730876):0.00066559002340394651[51],(JA0719:0.00200372130986627064,JA0608:0.00066780790607693307):0.00069643094285804365[64]):0.00334390484050349880[82],JA0456:0.00337770967372290733):0.00093238195372218730[53],JA0694:0.00374835568737626494):0.00000100000050002909[13]):0.09590426373656199543,Solyc:0.09590426373656199543);"
tr
tr="(((JA0701:0.00508305373867641488,(JA0694:0.00616552798515063345,JA0456:0.00614262873175289333):0.00283216540157717580):0.00446388699700046854,((((JA0711:0.00000100000050002909,JA0816:0.00000100000050002909):0.00000100000050002909,JA0702:0.00000100000050002909):0.00303658895876530912,JA0726:0.00611119195501753053):0.00000100000050002909,(((((JA0010:0.00000100000050002909,JA0798:0.00000100000050002909):0.00000100000050002909,JA0719:0.00000100000050002909):0.00000100000050002909,JA0608:0.00000100000050002909):0.00000100000050002909,JA0450:0.00000100000050002909):0.00000100000050002909,(JA0432:0.00612050686270374823,JA0723:0.00612090631142989203):0.00000100000050002909):0.00000100000050002909):0.00624561802433451323):0.02424814885497964326,Solyc:0.02424814885497964326);"
tr$edge.length<-NULL
?rtree
tr
tr1<-rtree(10)
tr1
tr="(((JA0701:0.00508305373867641488,(JA0694:0.00616552798515063345,JA0456:0.00614262873175289333):0.00283216540157717580):0.00446388699700046854,((((JA0711:0.00000100000050002909,JA0816:0.00000100000050002909):0.00000100000050002909,JA0702:0.00000100000050002909):0.00303658895876530912,JA0726:0.00611119195501753053):0.00000100000050002909,(((((JA0010:0.00000100000050002909,JA0798:0.00000100000050002909):0.00000100000050002909,JA0719:0.00000100000050002909):0.00000100000050002909,JA0608:0.00000100000050002909):0.00000100000050002909,JA0450:0.00000100000050002909):0.00000100000050002909,(JA0432:0.00612050686270374823,JA0723:0.00612090631142989203):0.00000100000050002909):0.00000100000050002909):0.00624561802433451323):0.02424814885497964326,Solyc:0.02424814885497964326);"
tr1=rtree(tr)
tr1<-rtree(10)
tr1
write.tree(tr1)
tree <- read.tree(text = "(((A,B),(C,D)),E);")
tree <- read.tree(text = "(((JA0701:0.00508305373867641488,(JA0694:0.00616552798515063345,JA0456:0.00614262873175289333):0.00283216540157717580):0.00446388699700046854,((((JA0711:0.00000100000050002909,JA0816:0.00000100000050002909):0.00000100000050002909,JA0702:0.00000100000050002909):0.00303658895876530912,JA0726:0.00611119195501753053):0.00000100000050002909,(((((JA0010:0.00000100000050002909,JA0798:0.00000100000050002909):0.00000100000050002909,JA0719:0.00000100000050002909):0.00000100000050002909,JA0608:0.00000100000050002909):0.00000100000050002909,JA0450:0.00000100000050002909):0.00000100000050002909,(JA0432:0.00612050686270374823,JA0723:0.00612090631142989203):0.00000100000050002909):0.00000100000050002909):0.00624561802433451323):0.02424814885497964326,Solyc:0.02424814885497964326)")
tree$edge.length<-NULL
tree
write.tree(tree)
set.seed(2)
x=matrix(rnorm(50*2), ncol=2)
x[1:25,1]=x[1:25,1]+3
x[1:25,2]=x[1:25,2]-4
km.out=kmeans(x,2,nstart=20)
plot(x,col=(km.out$cluster+1),main="K-Means Clustering", pch=20,cex=2)
km.out=kmeans(x,3,nstart=20)
plot(x,col=(km.out$cluster+1),main="K-Means Clustering", pch=20,cex=2)
km.out
km.out$tot.withinss
km.out=kmeans(x,3)
plot(x,col=(km.out$cluster+1),main="K-Means Clustering", pch=20,cex=2)
km.out$tot.withinss
km.out=kmeans(x,3)
plot(x,col=(km.out$cluster+1),main="K-Means Clustering", pch=20,cex=2)
km.out$tot.withinss
hc.complete=hclust(dist(x),method = "complete")
plot(hc.complete)
library(ISLR)
nci.labs=NCI60$labs
nci.data=NCI60$data
dim(nci.data)
table(nci.labs)
pr.out=prcomp(nci.data,scale=T)
Cols=function(vec){
cols=rainbow(length(unique(vec)))
return(cols[as.numeric(as.factor(vec))])
}
par(mfrow=c(1,2))
plot(pr.out$x[,1:2], col=Cols(nci.labs), pch=19)
plot(pr.out$x[,c(1,3)], col=Cols(nci.labs), pch=19)
plot(pr.out)
pve=100*pr.out$sdev^2/sum(pr.out$sdev^2)
plot(pve)
set.seed(2)
km.out=kmeans(sd.data, 4, nstart = 20)
sd.data=scale(nci.data)
km.out=kmeans(sd.data, 4, nstart = 20)
plot(sd.data, col=(km.out$cluster+1))
plot(sd.data, col=(km.out$cluster+1), pch=20, cex=2)
plot(nci.data, col=(km.out$cluster+1), pch=20, cex=2)
setwd("/Users/mengwu/Documents/JaltPhylo/data")
pdf("../results/common_ABBA.pdf")
dat <- read.csv("ABBA_common.csv", head=TRUE, sep=",")
boxplot(dat, main="Number of common sites support ABBA in pairwise comparisons",
ylab="Number of Sites", cex.lab = 1.2, cex = 1.5)
dev.off()
## Introgression pattern
dat <- read.csv("Dstat.csv", head=TRUE, sep=",")
dat$group <- factor(dat$species, levels = c("AUR","YUN","BIF","SIN","AIJ","UMB","GRA","INC","DEN"))
pdf("../results/ABBA_pattern.pdf", width=5, height=4)
ggplot(dat, aes(x=group, y=dstat, colour=group))+geom_point(size = 2)+
xlab("") + ylab("D statistics")+theme(axis.title=element_text(size=16)) +
theme_bw() + theme(legend.title=element_blank()) + theme(legend.position="none") +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
dev.off()
dat.mod = lm(dstat ~ group, data = dat)
summary(dat.mod)
dat <- read.csv("Dstat.csv", head=TRUE, sep=",")
dat$group <- factor(dat$species, levels = c("AUR","YUN","BIF","SIN","AIJ","UMB","GRA","INC","DEN"))
pdf("../results/ABBA_pattern.pdf", width=5, height=4)
ggplot(dat, aes(x=group, y=dstat, colour=group))+geom_point(size = 2)+
xlab("") + ylab("D statistics")+theme(axis.title=element_text(size=16)) +
theme_bw() + theme(legend.title=element_blank()) + theme(legend.position="none") +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
dev.off()
dat.mod = lm(dstat ~ group, data = dat)
summary(dat.mod)
library(ggplot2)
## Introgression pattern
dat <- read.csv("Dstat.csv", head=TRUE, sep=",")
dat$group <- factor(dat$species, levels = c("AUR","YUN","BIF","SIN","AIJ","UMB","GRA","INC","DEN"))
pdf("../results/ABBA_pattern.pdf", width=5, height=4)
ggplot(dat, aes(x=group, y=dstat, colour=group))+geom_point(size = 2)+
xlab("") + ylab("D statistics")+theme(axis.title=element_text(size=16)) +
theme_bw() + theme(legend.title=element_blank()) + theme(legend.position="none") +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
dev.off()
dat.mod = lm(dstat ~ group, data = dat)
summary(dat.mod)
## Introgression pattern
dat <- read.csv("Dstat.csv", head=TRUE, sep=",")
dat$group <- factor(dat$species, levels = c("AUR","YUN","BIF","SIN","AIJ","UMB","GRA","INC","DEN"))
pdf("../results/ABBA_pattern.pdf", width=5, height=4)
ggplot(dat, aes(x=group, y=dstat, colour=group))+geom_point(size = 2)+
xlab("") + ylab(substitute(paste(italic(D)+"statistics")))+theme(axis.title=element_text(size=16)) +
theme_bw() + theme(legend.title=element_blank()) + theme(legend.position="none") +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
dev.off()
dat.mod = lm(dstat ~ group, data = dat)
summary(dat.mod)
## Introgression pattern
dat <- read.csv("Dstat.csv", head=TRUE, sep=",")
dat$group <- factor(dat$species, levels = c("AUR","YUN","BIF","SIN","AIJ","UMB","GRA","INC","DEN"))
pdf("../results/ABBA_pattern.pdf", width=5, height=4)
ggplot(dat, aes(x=group, y=dstat, colour=group))+geom_point(size = 2)+
xlab("") + ylab(substitute(paste(italic(D),"statistic")))+theme(axis.title=element_text(size=16)) +
theme_bw() + theme(legend.title=element_blank()) + theme(legend.position="none") +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
dev.off()
dat.mod = lm(dstat ~ group, data = dat)
summary(dat.mod)
## Introgression pattern
dat <- read.csv("Dstat.csv", head=TRUE, sep=",")
dat$group <- factor(dat$species, levels = c("AUR","YUN","BIF","SIN","AIJ","UMB","GRA","INC","DEN"))
pdf("../results/ABBA_pattern.pdf", width=5, height=4)
ggplot(dat, aes(x=group, y=dstat, colour=group))+geom_point(size = 2)+
xlab("") + ylab(substitute(paste(italic(D)," statistic")))+theme(axis.title=element_text(size=16)) +
theme_bw() + theme(legend.title=element_blank()) + theme(legend.position="none") +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
dev.off()
dat.mod = lm(dstat ~ group, data = dat)
summary(dat.mod)
